/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.backend.programming.learning.system.kafka.auth.avro.model.organization;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OrganizationRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9117027309153885211L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrganizationRequestAvroModel\",\"namespace\":\"com.backend.programming.learning.system.kafka.auth.avro.model.organization\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"organizationId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"apiKey\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"moodleUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"serviceName\",\"type\":{\"type\":\"enum\",\"name\":\"ServiceName\",\"symbols\":[\"CORE_SERVICE\",\"AUTH_SERVICE\",\"COURSE_SERVICE\",\"CODE_ASSESSMENT_SERVICE\",\"BACKGROUND_SERVICE\"]}},{\"name\":\"copyState\",\"type\":{\"type\":\"enum\",\"name\":\"CopyState\",\"symbols\":[\"CREATING\",\"CREATED\",\"UPDATING\",\"UPDATED\",\"DELETING\",\"DELETED\",\"DELETE_FAILED\",\"UPDATE_FAILED\",\"CREATE_FAILED\"]}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"default\":0},{\"name\":\"updatedAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"default\":0},{\"name\":\"isDeleted\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<OrganizationRequestAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrganizationRequestAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrganizationRequestAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrganizationRequestAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrganizationRequestAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrganizationRequestAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrganizationRequestAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrganizationRequestAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrganizationRequestAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String id;
  private java.lang.String sagaId;
  private java.lang.String organizationId;
  private java.lang.String description;
  private java.lang.String name;
  private java.lang.String apiKey;
  private java.lang.String moodleUrl;
  private com.backend.programming.learning.system.kafka.auth.avro.model.organization.ServiceName serviceName;
  private com.backend.programming.learning.system.kafka.auth.avro.model.organization.CopyState copyState;
  private java.time.Instant createdAt;
  private java.time.Instant updatedAt;
  private java.lang.Boolean isDeleted;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrganizationRequestAvroModel() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param sagaId The new value for sagaId
   * @param organizationId The new value for organizationId
   * @param description The new value for description
   * @param name The new value for name
   * @param apiKey The new value for apiKey
   * @param moodleUrl The new value for moodleUrl
   * @param serviceName The new value for serviceName
   * @param copyState The new value for copyState
   * @param createdAt The new value for createdAt
   * @param updatedAt The new value for updatedAt
   * @param isDeleted The new value for isDeleted
   */
  public OrganizationRequestAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String organizationId, java.lang.String description, java.lang.String name, java.lang.String apiKey, java.lang.String moodleUrl, com.backend.programming.learning.system.kafka.auth.avro.model.organization.ServiceName serviceName, com.backend.programming.learning.system.kafka.auth.avro.model.organization.CopyState copyState, java.time.Instant createdAt, java.time.Instant updatedAt, java.lang.Boolean isDeleted) {
    this.id = id;
    this.sagaId = sagaId;
    this.organizationId = organizationId;
    this.description = description;
    this.name = name;
    this.apiKey = apiKey;
    this.moodleUrl = moodleUrl;
    this.serviceName = serviceName;
    this.copyState = copyState;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.updatedAt = updatedAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.isDeleted = isDeleted;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return sagaId;
    case 2: return organizationId;
    case 3: return description;
    case 4: return name;
    case 5: return apiKey;
    case 6: return moodleUrl;
    case 7: return serviceName;
    case 8: return copyState;
    case 9: return createdAt;
    case 10: return updatedAt;
    case 11: return isDeleted;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = value$ != null ? value$.toString() : null; break;
    case 1: sagaId = value$ != null ? value$.toString() : null; break;
    case 2: organizationId = value$ != null ? value$.toString() : null; break;
    case 3: description = value$ != null ? value$.toString() : null; break;
    case 4: name = value$ != null ? value$.toString() : null; break;
    case 5: apiKey = value$ != null ? value$.toString() : null; break;
    case 6: moodleUrl = value$ != null ? value$.toString() : null; break;
    case 7: serviceName = (com.backend.programming.learning.system.kafka.auth.avro.model.organization.ServiceName)value$; break;
    case 8: copyState = (com.backend.programming.learning.system.kafka.auth.avro.model.organization.CopyState)value$; break;
    case 9: createdAt = (java.time.Instant)value$; break;
    case 10: updatedAt = (java.time.Instant)value$; break;
    case 11: isDeleted = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'sagaId' field.
   * @return The value of the 'sagaId' field.
   */
  public java.lang.String getSagaId() {
    return sagaId;
  }


  /**
   * Sets the value of the 'sagaId' field.
   * @param value the value to set.
   */
  public void setSagaId(java.lang.String value) {
    this.sagaId = value;
  }

  /**
   * Gets the value of the 'organizationId' field.
   * @return The value of the 'organizationId' field.
   */
  public java.lang.String getOrganizationId() {
    return organizationId;
  }


  /**
   * Sets the value of the 'organizationId' field.
   * @param value the value to set.
   */
  public void setOrganizationId(java.lang.String value) {
    this.organizationId = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'apiKey' field.
   * @return The value of the 'apiKey' field.
   */
  public java.lang.String getApiKey() {
    return apiKey;
  }


  /**
   * Sets the value of the 'apiKey' field.
   * @param value the value to set.
   */
  public void setApiKey(java.lang.String value) {
    this.apiKey = value;
  }

  /**
   * Gets the value of the 'moodleUrl' field.
   * @return The value of the 'moodleUrl' field.
   */
  public java.lang.String getMoodleUrl() {
    return moodleUrl;
  }


  /**
   * Sets the value of the 'moodleUrl' field.
   * @param value the value to set.
   */
  public void setMoodleUrl(java.lang.String value) {
    this.moodleUrl = value;
  }

  /**
   * Gets the value of the 'serviceName' field.
   * @return The value of the 'serviceName' field.
   */
  public com.backend.programming.learning.system.kafka.auth.avro.model.organization.ServiceName getServiceName() {
    return serviceName;
  }


  /**
   * Sets the value of the 'serviceName' field.
   * @param value the value to set.
   */
  public void setServiceName(com.backend.programming.learning.system.kafka.auth.avro.model.organization.ServiceName value) {
    this.serviceName = value;
  }

  /**
   * Gets the value of the 'copyState' field.
   * @return The value of the 'copyState' field.
   */
  public com.backend.programming.learning.system.kafka.auth.avro.model.organization.CopyState getCopyState() {
    return copyState;
  }


  /**
   * Sets the value of the 'copyState' field.
   * @param value the value to set.
   */
  public void setCopyState(com.backend.programming.learning.system.kafka.auth.avro.model.organization.CopyState value) {
    this.copyState = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'updatedAt' field.
   * @return The value of the 'updatedAt' field.
   */
  public java.time.Instant getUpdatedAt() {
    return updatedAt;
  }


  /**
   * Sets the value of the 'updatedAt' field.
   * @param value the value to set.
   */
  public void setUpdatedAt(java.time.Instant value) {
    this.updatedAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'isDeleted' field.
   * @return The value of the 'isDeleted' field.
   */
  public java.lang.Boolean getIsDeleted() {
    return isDeleted;
  }


  /**
   * Sets the value of the 'isDeleted' field.
   * @param value the value to set.
   */
  public void setIsDeleted(java.lang.Boolean value) {
    this.isDeleted = value;
  }

  /**
   * Creates a new OrganizationRequestAvroModel RecordBuilder.
   * @return A new OrganizationRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder newBuilder() {
    return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder();
  }

  /**
   * Creates a new OrganizationRequestAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrganizationRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder newBuilder(com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new OrganizationRequestAvroModel RecordBuilder by copying an existing OrganizationRequestAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new OrganizationRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder newBuilder(com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrganizationRequestAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrganizationRequestAvroModel>
    implements org.apache.avro.data.RecordBuilder<OrganizationRequestAvroModel> {

    private java.lang.String id;
    private java.lang.String sagaId;
    private java.lang.String organizationId;
    private java.lang.String description;
    private java.lang.String name;
    private java.lang.String apiKey;
    private java.lang.String moodleUrl;
    private com.backend.programming.learning.system.kafka.auth.avro.model.organization.ServiceName serviceName;
    private com.backend.programming.learning.system.kafka.auth.avro.model.organization.CopyState copyState;
    private java.time.Instant createdAt;
    private java.time.Instant updatedAt;
    private java.lang.Boolean isDeleted;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.organizationId)) {
        this.organizationId = data().deepCopy(fields()[2].schema(), other.organizationId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.apiKey)) {
        this.apiKey = data().deepCopy(fields()[5].schema(), other.apiKey);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.moodleUrl)) {
        this.moodleUrl = data().deepCopy(fields()[6].schema(), other.moodleUrl);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.serviceName)) {
        this.serviceName = data().deepCopy(fields()[7].schema(), other.serviceName);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.copyState)) {
        this.copyState = data().deepCopy(fields()[8].schema(), other.copyState);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[9].schema(), other.createdAt);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[10].schema(), other.updatedAt);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.isDeleted)) {
        this.isDeleted = data().deepCopy(fields()[11].schema(), other.isDeleted);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing OrganizationRequestAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.organizationId)) {
        this.organizationId = data().deepCopy(fields()[2].schema(), other.organizationId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.apiKey)) {
        this.apiKey = data().deepCopy(fields()[5].schema(), other.apiKey);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.moodleUrl)) {
        this.moodleUrl = data().deepCopy(fields()[6].schema(), other.moodleUrl);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.serviceName)) {
        this.serviceName = data().deepCopy(fields()[7].schema(), other.serviceName);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.copyState)) {
        this.copyState = data().deepCopy(fields()[8].schema(), other.copyState);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[9].schema(), other.createdAt);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[10].schema(), other.updatedAt);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.isDeleted)) {
        this.isDeleted = data().deepCopy(fields()[11].schema(), other.isDeleted);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaId' field.
      * @return The value.
      */
    public java.lang.String getSagaId() {
      return sagaId;
    }


    /**
      * Sets the value of the 'sagaId' field.
      * @param value The value of 'sagaId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setSagaId(java.lang.String value) {
      validate(fields()[1], value);
      this.sagaId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaId' field has been set.
      * @return True if the 'sagaId' field has been set, false otherwise.
      */
    public boolean hasSagaId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sagaId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearSagaId() {
      sagaId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'organizationId' field.
      * @return The value.
      */
    public java.lang.String getOrganizationId() {
      return organizationId;
    }


    /**
      * Sets the value of the 'organizationId' field.
      * @param value The value of 'organizationId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setOrganizationId(java.lang.String value) {
      validate(fields()[2], value);
      this.organizationId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'organizationId' field has been set.
      * @return True if the 'organizationId' field has been set, false otherwise.
      */
    public boolean hasOrganizationId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'organizationId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearOrganizationId() {
      organizationId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setDescription(java.lang.String value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setName(java.lang.String value) {
      validate(fields()[4], value);
      this.name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearName() {
      name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'apiKey' field.
      * @return The value.
      */
    public java.lang.String getApiKey() {
      return apiKey;
    }


    /**
      * Sets the value of the 'apiKey' field.
      * @param value The value of 'apiKey'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setApiKey(java.lang.String value) {
      validate(fields()[5], value);
      this.apiKey = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'apiKey' field has been set.
      * @return True if the 'apiKey' field has been set, false otherwise.
      */
    public boolean hasApiKey() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'apiKey' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearApiKey() {
      apiKey = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'moodleUrl' field.
      * @return The value.
      */
    public java.lang.String getMoodleUrl() {
      return moodleUrl;
    }


    /**
      * Sets the value of the 'moodleUrl' field.
      * @param value The value of 'moodleUrl'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setMoodleUrl(java.lang.String value) {
      validate(fields()[6], value);
      this.moodleUrl = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'moodleUrl' field has been set.
      * @return True if the 'moodleUrl' field has been set, false otherwise.
      */
    public boolean hasMoodleUrl() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'moodleUrl' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearMoodleUrl() {
      moodleUrl = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'serviceName' field.
      * @return The value.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.ServiceName getServiceName() {
      return serviceName;
    }


    /**
      * Sets the value of the 'serviceName' field.
      * @param value The value of 'serviceName'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setServiceName(com.backend.programming.learning.system.kafka.auth.avro.model.organization.ServiceName value) {
      validate(fields()[7], value);
      this.serviceName = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceName' field has been set.
      * @return True if the 'serviceName' field has been set, false otherwise.
      */
    public boolean hasServiceName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'serviceName' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearServiceName() {
      serviceName = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'copyState' field.
      * @return The value.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.CopyState getCopyState() {
      return copyState;
    }


    /**
      * Sets the value of the 'copyState' field.
      * @param value The value of 'copyState'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setCopyState(com.backend.programming.learning.system.kafka.auth.avro.model.organization.CopyState value) {
      validate(fields()[8], value);
      this.copyState = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'copyState' field has been set.
      * @return True if the 'copyState' field has been set, false otherwise.
      */
    public boolean hasCopyState() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'copyState' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearCopyState() {
      copyState = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[9], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearCreatedAt() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedAt' field.
      * @return The value.
      */
    public java.time.Instant getUpdatedAt() {
      return updatedAt;
    }


    /**
      * Sets the value of the 'updatedAt' field.
      * @param value The value of 'updatedAt'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setUpdatedAt(java.time.Instant value) {
      validate(fields()[10], value);
      this.updatedAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedAt' field has been set.
      * @return True if the 'updatedAt' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'updatedAt' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearUpdatedAt() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'isDeleted' field.
      * @return The value.
      */
    public java.lang.Boolean getIsDeleted() {
      return isDeleted;
    }


    /**
      * Sets the value of the 'isDeleted' field.
      * @param value The value of 'isDeleted'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder setIsDeleted(java.lang.Boolean value) {
      validate(fields()[11], value);
      this.isDeleted = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'isDeleted' field has been set.
      * @return True if the 'isDeleted' field has been set, false otherwise.
      */
    public boolean hasIsDeleted() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'isDeleted' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationRequestAvroModel.Builder clearIsDeleted() {
      isDeleted = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrganizationRequestAvroModel build() {
      try {
        OrganizationRequestAvroModel record = new OrganizationRequestAvroModel();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.lang.String) defaultValue(fields()[1]);
        record.organizationId = fieldSetFlags()[2] ? this.organizationId : (java.lang.String) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.String) defaultValue(fields()[3]);
        record.name = fieldSetFlags()[4] ? this.name : (java.lang.String) defaultValue(fields()[4]);
        record.apiKey = fieldSetFlags()[5] ? this.apiKey : (java.lang.String) defaultValue(fields()[5]);
        record.moodleUrl = fieldSetFlags()[6] ? this.moodleUrl : (java.lang.String) defaultValue(fields()[6]);
        record.serviceName = fieldSetFlags()[7] ? this.serviceName : (com.backend.programming.learning.system.kafka.auth.avro.model.organization.ServiceName) defaultValue(fields()[7]);
        record.copyState = fieldSetFlags()[8] ? this.copyState : (com.backend.programming.learning.system.kafka.auth.avro.model.organization.CopyState) defaultValue(fields()[8]);
        record.createdAt = fieldSetFlags()[9] ? this.createdAt : (java.time.Instant) defaultValue(fields()[9]);
        record.updatedAt = fieldSetFlags()[10] ? this.updatedAt : (java.time.Instant) defaultValue(fields()[10]);
        record.isDeleted = fieldSetFlags()[11] ? this.isDeleted : (java.lang.Boolean) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrganizationRequestAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrganizationRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrganizationRequestAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<OrganizationRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










