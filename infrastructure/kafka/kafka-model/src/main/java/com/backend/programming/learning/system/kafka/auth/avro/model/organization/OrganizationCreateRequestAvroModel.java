/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.backend.programming.learning.system.kafka.auth.avro.model.organization;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OrganizationCreateRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2277018623949183985L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrganizationCreateRequestAvroModel\",\"namespace\":\"com.backend.programming.learning.system.kafka.auth.avro.model.organization\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"organizationId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"description\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"phone\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"address\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"createdBy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"updatedAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"isDeleted\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<OrganizationCreateRequestAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrganizationCreateRequestAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrganizationCreateRequestAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrganizationCreateRequestAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrganizationCreateRequestAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrganizationCreateRequestAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrganizationCreateRequestAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrganizationCreateRequestAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrganizationCreateRequestAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String id;
  private java.lang.String sagaId;
  private java.lang.String organizationId;
  private java.lang.String email;
  private java.lang.String description;
  private java.lang.String name;
  private java.lang.String phone;
  private java.lang.String address;
  private java.lang.String createdBy;
  private java.time.Instant createdAt;
  private java.time.Instant updatedAt;
  private boolean isDeleted;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrganizationCreateRequestAvroModel() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param sagaId The new value for sagaId
   * @param organizationId The new value for organizationId
   * @param email The new value for email
   * @param description The new value for description
   * @param name The new value for name
   * @param phone The new value for phone
   * @param address The new value for address
   * @param createdBy The new value for createdBy
   * @param createdAt The new value for createdAt
   * @param updatedAt The new value for updatedAt
   * @param isDeleted The new value for isDeleted
   */
  public OrganizationCreateRequestAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String organizationId, java.lang.String email, java.lang.String description, java.lang.String name, java.lang.String phone, java.lang.String address, java.lang.String createdBy, java.time.Instant createdAt, java.time.Instant updatedAt, java.lang.Boolean isDeleted) {
    this.id = id;
    this.sagaId = sagaId;
    this.organizationId = organizationId;
    this.email = email;
    this.description = description;
    this.name = name;
    this.phone = phone;
    this.address = address;
    this.createdBy = createdBy;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.updatedAt = updatedAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.isDeleted = isDeleted;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return sagaId;
    case 2: return organizationId;
    case 3: return email;
    case 4: return description;
    case 5: return name;
    case 6: return phone;
    case 7: return address;
    case 8: return createdBy;
    case 9: return createdAt;
    case 10: return updatedAt;
    case 11: return isDeleted;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = value$ != null ? value$.toString() : null; break;
    case 1: sagaId = value$ != null ? value$.toString() : null; break;
    case 2: organizationId = value$ != null ? value$.toString() : null; break;
    case 3: email = value$ != null ? value$.toString() : null; break;
    case 4: description = value$ != null ? value$.toString() : null; break;
    case 5: name = value$ != null ? value$.toString() : null; break;
    case 6: phone = value$ != null ? value$.toString() : null; break;
    case 7: address = value$ != null ? value$.toString() : null; break;
    case 8: createdBy = value$ != null ? value$.toString() : null; break;
    case 9: createdAt = (java.time.Instant)value$; break;
    case 10: updatedAt = (java.time.Instant)value$; break;
    case 11: isDeleted = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'sagaId' field.
   * @return The value of the 'sagaId' field.
   */
  public java.lang.String getSagaId() {
    return sagaId;
  }


  /**
   * Sets the value of the 'sagaId' field.
   * @param value the value to set.
   */
  public void setSagaId(java.lang.String value) {
    this.sagaId = value;
  }

  /**
   * Gets the value of the 'organizationId' field.
   * @return The value of the 'organizationId' field.
   */
  public java.lang.String getOrganizationId() {
    return organizationId;
  }


  /**
   * Sets the value of the 'organizationId' field.
   * @param value the value to set.
   */
  public void setOrganizationId(java.lang.String value) {
    this.organizationId = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.String getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'phone' field.
   * @return The value of the 'phone' field.
   */
  public java.lang.String getPhone() {
    return phone;
  }


  /**
   * Sets the value of the 'phone' field.
   * @param value the value to set.
   */
  public void setPhone(java.lang.String value) {
    this.phone = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public java.lang.String getAddress() {
    return address;
  }


  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.String value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'createdBy' field.
   * @return The value of the 'createdBy' field.
   */
  public java.lang.String getCreatedBy() {
    return createdBy;
  }


  /**
   * Sets the value of the 'createdBy' field.
   * @param value the value to set.
   */
  public void setCreatedBy(java.lang.String value) {
    this.createdBy = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'updatedAt' field.
   * @return The value of the 'updatedAt' field.
   */
  public java.time.Instant getUpdatedAt() {
    return updatedAt;
  }


  /**
   * Sets the value of the 'updatedAt' field.
   * @param value the value to set.
   */
  public void setUpdatedAt(java.time.Instant value) {
    this.updatedAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'isDeleted' field.
   * @return The value of the 'isDeleted' field.
   */
  public boolean getIsDeleted() {
    return isDeleted;
  }


  /**
   * Sets the value of the 'isDeleted' field.
   * @param value the value to set.
   */
  public void setIsDeleted(boolean value) {
    this.isDeleted = value;
  }

  /**
   * Creates a new OrganizationCreateRequestAvroModel RecordBuilder.
   * @return A new OrganizationCreateRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder newBuilder() {
    return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder();
  }

  /**
   * Creates a new OrganizationCreateRequestAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrganizationCreateRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder newBuilder(com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new OrganizationCreateRequestAvroModel RecordBuilder by copying an existing OrganizationCreateRequestAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new OrganizationCreateRequestAvroModel RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder newBuilder(com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrganizationCreateRequestAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrganizationCreateRequestAvroModel>
    implements org.apache.avro.data.RecordBuilder<OrganizationCreateRequestAvroModel> {

    private java.lang.String id;
    private java.lang.String sagaId;
    private java.lang.String organizationId;
    private java.lang.String email;
    private java.lang.String description;
    private java.lang.String name;
    private java.lang.String phone;
    private java.lang.String address;
    private java.lang.String createdBy;
    private java.time.Instant createdAt;
    private java.time.Instant updatedAt;
    private boolean isDeleted;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.organizationId)) {
        this.organizationId = data().deepCopy(fields()[2].schema(), other.organizationId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.name)) {
        this.name = data().deepCopy(fields()[5].schema(), other.name);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.phone)) {
        this.phone = data().deepCopy(fields()[6].schema(), other.phone);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.address)) {
        this.address = data().deepCopy(fields()[7].schema(), other.address);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[8].schema(), other.createdBy);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[9].schema(), other.createdAt);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[10].schema(), other.updatedAt);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.isDeleted)) {
        this.isDeleted = data().deepCopy(fields()[11].schema(), other.isDeleted);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing OrganizationCreateRequestAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.organizationId)) {
        this.organizationId = data().deepCopy(fields()[2].schema(), other.organizationId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.description)) {
        this.description = data().deepCopy(fields()[4].schema(), other.description);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.name)) {
        this.name = data().deepCopy(fields()[5].schema(), other.name);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.phone)) {
        this.phone = data().deepCopy(fields()[6].schema(), other.phone);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.address)) {
        this.address = data().deepCopy(fields()[7].schema(), other.address);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[8].schema(), other.createdBy);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[9].schema(), other.createdAt);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[10].schema(), other.updatedAt);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.isDeleted)) {
        this.isDeleted = data().deepCopy(fields()[11].schema(), other.isDeleted);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaId' field.
      * @return The value.
      */
    public java.lang.String getSagaId() {
      return sagaId;
    }


    /**
      * Sets the value of the 'sagaId' field.
      * @param value The value of 'sagaId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setSagaId(java.lang.String value) {
      validate(fields()[1], value);
      this.sagaId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaId' field has been set.
      * @return True if the 'sagaId' field has been set, false otherwise.
      */
    public boolean hasSagaId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sagaId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearSagaId() {
      sagaId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'organizationId' field.
      * @return The value.
      */
    public java.lang.String getOrganizationId() {
      return organizationId;
    }


    /**
      * Sets the value of the 'organizationId' field.
      * @param value The value of 'organizationId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setOrganizationId(java.lang.String value) {
      validate(fields()[2], value);
      this.organizationId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'organizationId' field has been set.
      * @return True if the 'organizationId' field has been set, false otherwise.
      */
    public boolean hasOrganizationId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'organizationId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearOrganizationId() {
      organizationId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setEmail(java.lang.String value) {
      validate(fields()[3], value);
      this.email = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearEmail() {
      email = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setDescription(java.lang.String value) {
      validate(fields()[4], value);
      this.description = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearDescription() {
      description = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setName(java.lang.String value) {
      validate(fields()[5], value);
      this.name = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearName() {
      name = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public java.lang.String getPhone() {
      return phone;
    }


    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setPhone(java.lang.String value) {
      validate(fields()[6], value);
      this.phone = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public java.lang.String getAddress() {
      return address;
    }


    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setAddress(java.lang.String value) {
      validate(fields()[7], value);
      this.address = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearAddress() {
      address = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdBy' field.
      * @return The value.
      */
    public java.lang.String getCreatedBy() {
      return createdBy;
    }


    /**
      * Sets the value of the 'createdBy' field.
      * @param value The value of 'createdBy'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setCreatedBy(java.lang.String value) {
      validate(fields()[8], value);
      this.createdBy = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'createdBy' field has been set.
      * @return True if the 'createdBy' field has been set, false otherwise.
      */
    public boolean hasCreatedBy() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'createdBy' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearCreatedBy() {
      createdBy = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[9], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearCreatedAt() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedAt' field.
      * @return The value.
      */
    public java.time.Instant getUpdatedAt() {
      return updatedAt;
    }


    /**
      * Sets the value of the 'updatedAt' field.
      * @param value The value of 'updatedAt'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setUpdatedAt(java.time.Instant value) {
      validate(fields()[10], value);
      this.updatedAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedAt' field has been set.
      * @return True if the 'updatedAt' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'updatedAt' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearUpdatedAt() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'isDeleted' field.
      * @return The value.
      */
    public boolean getIsDeleted() {
      return isDeleted;
    }


    /**
      * Sets the value of the 'isDeleted' field.
      * @param value The value of 'isDeleted'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder setIsDeleted(boolean value) {
      validate(fields()[11], value);
      this.isDeleted = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'isDeleted' field has been set.
      * @return True if the 'isDeleted' field has been set, false otherwise.
      */
    public boolean hasIsDeleted() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'isDeleted' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.auth.avro.model.organization.OrganizationCreateRequestAvroModel.Builder clearIsDeleted() {
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrganizationCreateRequestAvroModel build() {
      try {
        OrganizationCreateRequestAvroModel record = new OrganizationCreateRequestAvroModel();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.lang.String) defaultValue(fields()[1]);
        record.organizationId = fieldSetFlags()[2] ? this.organizationId : (java.lang.String) defaultValue(fields()[2]);
        record.email = fieldSetFlags()[3] ? this.email : (java.lang.String) defaultValue(fields()[3]);
        record.description = fieldSetFlags()[4] ? this.description : (java.lang.String) defaultValue(fields()[4]);
        record.name = fieldSetFlags()[5] ? this.name : (java.lang.String) defaultValue(fields()[5]);
        record.phone = fieldSetFlags()[6] ? this.phone : (java.lang.String) defaultValue(fields()[6]);
        record.address = fieldSetFlags()[7] ? this.address : (java.lang.String) defaultValue(fields()[7]);
        record.createdBy = fieldSetFlags()[8] ? this.createdBy : (java.lang.String) defaultValue(fields()[8]);
        record.createdAt = fieldSetFlags()[9] ? this.createdAt : (java.time.Instant) defaultValue(fields()[9]);
        record.updatedAt = fieldSetFlags()[10] ? this.updatedAt : (java.time.Instant) defaultValue(fields()[10]);
        record.isDeleted = fieldSetFlags()[11] ? this.isDeleted : (java.lang.Boolean) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrganizationCreateRequestAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrganizationCreateRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrganizationCreateRequestAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<OrganizationCreateRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










