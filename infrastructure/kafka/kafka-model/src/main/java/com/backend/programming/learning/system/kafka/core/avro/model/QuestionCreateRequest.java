/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.backend.programming.learning.system.kafka.core.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class QuestionCreateRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -10595630889653612L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"QuestionCreateRequest\",\"namespace\":\"com.backend.programming.learning.system.kafka.core.avro.model\",\"fields\":[{\"name\":\"answers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AnswerOfQuestion\",\"fields\":[{\"name\":\"answer\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"feedback\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"fraction\",\"type\":\"float\"}]},\"java-class\":\"java.util.List\"}},{\"name\":\"createdBy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"logicalType\":\"UUID\"}},{\"name\":\"defaultMark\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":5,\"scale\":2}},{\"name\":\"difficulty\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"generalFeedback\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"organizationId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"logicalType\":\"UUID\"}},{\"name\":\"qType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"questionText\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"updatedBy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"logicalType\":\"UUID\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<QuestionCreateRequest> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<QuestionCreateRequest> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<QuestionCreateRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<QuestionCreateRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<QuestionCreateRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this QuestionCreateRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a QuestionCreateRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a QuestionCreateRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static QuestionCreateRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> answers;
  private java.lang.String createdBy;
  private java.math.BigDecimal defaultMark;
  private java.lang.String difficulty;
  private java.lang.String generalFeedback;
  private java.lang.String name;
  private java.lang.String organizationId;
  private java.lang.String qType;
  private java.lang.String questionText;
  private java.lang.String updatedBy;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public QuestionCreateRequest() {}

  /**
   * All-args constructor.
   * @param answers The new value for answers
   * @param createdBy The new value for createdBy
   * @param defaultMark The new value for defaultMark
   * @param difficulty The new value for difficulty
   * @param generalFeedback The new value for generalFeedback
   * @param name The new value for name
   * @param organizationId The new value for organizationId
   * @param qType The new value for qType
   * @param questionText The new value for questionText
   * @param updatedBy The new value for updatedBy
   */
  public QuestionCreateRequest(java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> answers, java.lang.String createdBy, java.math.BigDecimal defaultMark, java.lang.String difficulty, java.lang.String generalFeedback, java.lang.String name, java.lang.String organizationId, java.lang.String qType, java.lang.String questionText, java.lang.String updatedBy) {
    this.answers = answers;
    this.createdBy = createdBy;
    this.defaultMark = defaultMark;
    this.difficulty = difficulty;
    this.generalFeedback = generalFeedback;
    this.name = name;
    this.organizationId = organizationId;
    this.qType = qType;
    this.questionText = questionText;
    this.updatedBy = updatedBy;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return answers;
    case 1: return createdBy;
    case 2: return defaultMark;
    case 3: return difficulty;
    case 4: return generalFeedback;
    case 5: return name;
    case 6: return organizationId;
    case 7: return qType;
    case 8: return questionText;
    case 9: return updatedBy;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: answers = (java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion>)value$; break;
    case 1: createdBy = value$ != null ? value$.toString() : null; break;
    case 2: defaultMark = (java.math.BigDecimal)value$; break;
    case 3: difficulty = value$ != null ? value$.toString() : null; break;
    case 4: generalFeedback = value$ != null ? value$.toString() : null; break;
    case 5: name = value$ != null ? value$.toString() : null; break;
    case 6: organizationId = value$ != null ? value$.toString() : null; break;
    case 7: qType = value$ != null ? value$.toString() : null; break;
    case 8: questionText = value$ != null ? value$.toString() : null; break;
    case 9: updatedBy = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'answers' field.
   * @return The value of the 'answers' field.
   */
  public java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> getAnswers() {
    return answers;
  }


  /**
   * Sets the value of the 'answers' field.
   * @param value the value to set.
   */
  public void setAnswers(java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> value) {
    this.answers = value;
  }

  /**
   * Gets the value of the 'createdBy' field.
   * @return The value of the 'createdBy' field.
   */
  public java.lang.String getCreatedBy() {
    return createdBy;
  }


  /**
   * Sets the value of the 'createdBy' field.
   * @param value the value to set.
   */
  public void setCreatedBy(java.lang.String value) {
    this.createdBy = value;
  }

  /**
   * Gets the value of the 'defaultMark' field.
   * @return The value of the 'defaultMark' field.
   */
  public java.math.BigDecimal getDefaultMark() {
    return defaultMark;
  }


  /**
   * Sets the value of the 'defaultMark' field.
   * @param value the value to set.
   */
  public void setDefaultMark(java.math.BigDecimal value) {
    this.defaultMark = value;
  }

  /**
   * Gets the value of the 'difficulty' field.
   * @return The value of the 'difficulty' field.
   */
  public java.lang.String getDifficulty() {
    return difficulty;
  }


  /**
   * Sets the value of the 'difficulty' field.
   * @param value the value to set.
   */
  public void setDifficulty(java.lang.String value) {
    this.difficulty = value;
  }

  /**
   * Gets the value of the 'generalFeedback' field.
   * @return The value of the 'generalFeedback' field.
   */
  public java.lang.String getGeneralFeedback() {
    return generalFeedback;
  }


  /**
   * Sets the value of the 'generalFeedback' field.
   * @param value the value to set.
   */
  public void setGeneralFeedback(java.lang.String value) {
    this.generalFeedback = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'organizationId' field.
   * @return The value of the 'organizationId' field.
   */
  public java.lang.String getOrganizationId() {
    return organizationId;
  }


  /**
   * Sets the value of the 'organizationId' field.
   * @param value the value to set.
   */
  public void setOrganizationId(java.lang.String value) {
    this.organizationId = value;
  }

  /**
   * Gets the value of the 'qType' field.
   * @return The value of the 'qType' field.
   */
  public java.lang.String getQType() {
    return qType;
  }


  /**
   * Sets the value of the 'qType' field.
   * @param value the value to set.
   */
  public void setQType(java.lang.String value) {
    this.qType = value;
  }

  /**
   * Gets the value of the 'questionText' field.
   * @return The value of the 'questionText' field.
   */
  public java.lang.String getQuestionText() {
    return questionText;
  }


  /**
   * Sets the value of the 'questionText' field.
   * @param value the value to set.
   */
  public void setQuestionText(java.lang.String value) {
    this.questionText = value;
  }

  /**
   * Gets the value of the 'updatedBy' field.
   * @return The value of the 'updatedBy' field.
   */
  public java.lang.String getUpdatedBy() {
    return updatedBy;
  }


  /**
   * Sets the value of the 'updatedBy' field.
   * @param value the value to set.
   */
  public void setUpdatedBy(java.lang.String value) {
    this.updatedBy = value;
  }

  /**
   * Creates a new QuestionCreateRequest RecordBuilder.
   * @return A new QuestionCreateRequest RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder newBuilder() {
    return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder();
  }

  /**
   * Creates a new QuestionCreateRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new QuestionCreateRequest RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder newBuilder(com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder(other);
    }
  }

  /**
   * Creates a new QuestionCreateRequest RecordBuilder by copying an existing QuestionCreateRequest instance.
   * @param other The existing instance to copy.
   * @return A new QuestionCreateRequest RecordBuilder
   */
  public static com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder newBuilder(com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest other) {
    if (other == null) {
      return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder();
    } else {
      return new com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for QuestionCreateRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<QuestionCreateRequest>
    implements org.apache.avro.data.RecordBuilder<QuestionCreateRequest> {

    private java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> answers;
    private java.lang.String createdBy;
    private java.math.BigDecimal defaultMark;
    private java.lang.String difficulty;
    private java.lang.String generalFeedback;
    private java.lang.String name;
    private java.lang.String organizationId;
    private java.lang.String qType;
    private java.lang.String questionText;
    private java.lang.String updatedBy;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.answers)) {
        this.answers = data().deepCopy(fields()[0].schema(), other.answers);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[1].schema(), other.createdBy);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.defaultMark)) {
        this.defaultMark = data().deepCopy(fields()[2].schema(), other.defaultMark);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.difficulty)) {
        this.difficulty = data().deepCopy(fields()[3].schema(), other.difficulty);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.generalFeedback)) {
        this.generalFeedback = data().deepCopy(fields()[4].schema(), other.generalFeedback);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.name)) {
        this.name = data().deepCopy(fields()[5].schema(), other.name);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.organizationId)) {
        this.organizationId = data().deepCopy(fields()[6].schema(), other.organizationId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.qType)) {
        this.qType = data().deepCopy(fields()[7].schema(), other.qType);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.questionText)) {
        this.questionText = data().deepCopy(fields()[8].schema(), other.questionText);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[9].schema(), other.updatedBy);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing QuestionCreateRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.answers)) {
        this.answers = data().deepCopy(fields()[0].schema(), other.answers);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[1].schema(), other.createdBy);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.defaultMark)) {
        this.defaultMark = data().deepCopy(fields()[2].schema(), other.defaultMark);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.difficulty)) {
        this.difficulty = data().deepCopy(fields()[3].schema(), other.difficulty);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.generalFeedback)) {
        this.generalFeedback = data().deepCopy(fields()[4].schema(), other.generalFeedback);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.name)) {
        this.name = data().deepCopy(fields()[5].schema(), other.name);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.organizationId)) {
        this.organizationId = data().deepCopy(fields()[6].schema(), other.organizationId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.qType)) {
        this.qType = data().deepCopy(fields()[7].schema(), other.qType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.questionText)) {
        this.questionText = data().deepCopy(fields()[8].schema(), other.questionText);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[9].schema(), other.updatedBy);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'answers' field.
      * @return The value.
      */
    public java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> getAnswers() {
      return answers;
    }


    /**
      * Sets the value of the 'answers' field.
      * @param value The value of 'answers'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setAnswers(java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion> value) {
      validate(fields()[0], value);
      this.answers = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'answers' field has been set.
      * @return True if the 'answers' field has been set, false otherwise.
      */
    public boolean hasAnswers() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'answers' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearAnswers() {
      answers = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdBy' field.
      * @return The value.
      */
    public java.lang.String getCreatedBy() {
      return createdBy;
    }


    /**
      * Sets the value of the 'createdBy' field.
      * @param value The value of 'createdBy'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setCreatedBy(java.lang.String value) {
      validate(fields()[1], value);
      this.createdBy = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'createdBy' field has been set.
      * @return True if the 'createdBy' field has been set, false otherwise.
      */
    public boolean hasCreatedBy() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'createdBy' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearCreatedBy() {
      createdBy = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'defaultMark' field.
      * @return The value.
      */
    public java.math.BigDecimal getDefaultMark() {
      return defaultMark;
    }


    /**
      * Sets the value of the 'defaultMark' field.
      * @param value The value of 'defaultMark'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setDefaultMark(java.math.BigDecimal value) {
      validate(fields()[2], value);
      this.defaultMark = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'defaultMark' field has been set.
      * @return True if the 'defaultMark' field has been set, false otherwise.
      */
    public boolean hasDefaultMark() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'defaultMark' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearDefaultMark() {
      defaultMark = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'difficulty' field.
      * @return The value.
      */
    public java.lang.String getDifficulty() {
      return difficulty;
    }


    /**
      * Sets the value of the 'difficulty' field.
      * @param value The value of 'difficulty'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setDifficulty(java.lang.String value) {
      validate(fields()[3], value);
      this.difficulty = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'difficulty' field has been set.
      * @return True if the 'difficulty' field has been set, false otherwise.
      */
    public boolean hasDifficulty() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'difficulty' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearDifficulty() {
      difficulty = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'generalFeedback' field.
      * @return The value.
      */
    public java.lang.String getGeneralFeedback() {
      return generalFeedback;
    }


    /**
      * Sets the value of the 'generalFeedback' field.
      * @param value The value of 'generalFeedback'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setGeneralFeedback(java.lang.String value) {
      validate(fields()[4], value);
      this.generalFeedback = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'generalFeedback' field has been set.
      * @return True if the 'generalFeedback' field has been set, false otherwise.
      */
    public boolean hasGeneralFeedback() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'generalFeedback' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearGeneralFeedback() {
      generalFeedback = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setName(java.lang.String value) {
      validate(fields()[5], value);
      this.name = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearName() {
      name = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'organizationId' field.
      * @return The value.
      */
    public java.lang.String getOrganizationId() {
      return organizationId;
    }


    /**
      * Sets the value of the 'organizationId' field.
      * @param value The value of 'organizationId'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setOrganizationId(java.lang.String value) {
      validate(fields()[6], value);
      this.organizationId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'organizationId' field has been set.
      * @return True if the 'organizationId' field has been set, false otherwise.
      */
    public boolean hasOrganizationId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'organizationId' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearOrganizationId() {
      organizationId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'qType' field.
      * @return The value.
      */
    public java.lang.String getQType() {
      return qType;
    }


    /**
      * Sets the value of the 'qType' field.
      * @param value The value of 'qType'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setQType(java.lang.String value) {
      validate(fields()[7], value);
      this.qType = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'qType' field has been set.
      * @return True if the 'qType' field has been set, false otherwise.
      */
    public boolean hasQType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'qType' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearQType() {
      qType = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'questionText' field.
      * @return The value.
      */
    public java.lang.String getQuestionText() {
      return questionText;
    }


    /**
      * Sets the value of the 'questionText' field.
      * @param value The value of 'questionText'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setQuestionText(java.lang.String value) {
      validate(fields()[8], value);
      this.questionText = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'questionText' field has been set.
      * @return True if the 'questionText' field has been set, false otherwise.
      */
    public boolean hasQuestionText() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'questionText' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearQuestionText() {
      questionText = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedBy' field.
      * @return The value.
      */
    public java.lang.String getUpdatedBy() {
      return updatedBy;
    }


    /**
      * Sets the value of the 'updatedBy' field.
      * @param value The value of 'updatedBy'.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder setUpdatedBy(java.lang.String value) {
      validate(fields()[9], value);
      this.updatedBy = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedBy' field has been set.
      * @return True if the 'updatedBy' field has been set, false otherwise.
      */
    public boolean hasUpdatedBy() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'updatedBy' field.
      * @return This builder.
      */
    public com.backend.programming.learning.system.kafka.core.avro.model.QuestionCreateRequest.Builder clearUpdatedBy() {
      updatedBy = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public QuestionCreateRequest build() {
      try {
        QuestionCreateRequest record = new QuestionCreateRequest();
        record.answers = fieldSetFlags()[0] ? this.answers : (java.util.List<com.backend.programming.learning.system.kafka.core.avro.model.AnswerOfQuestion>) defaultValue(fields()[0]);
        record.createdBy = fieldSetFlags()[1] ? this.createdBy : (java.lang.String) defaultValue(fields()[1]);
        record.defaultMark = fieldSetFlags()[2] ? this.defaultMark : (java.math.BigDecimal) defaultValue(fields()[2]);
        record.difficulty = fieldSetFlags()[3] ? this.difficulty : (java.lang.String) defaultValue(fields()[3]);
        record.generalFeedback = fieldSetFlags()[4] ? this.generalFeedback : (java.lang.String) defaultValue(fields()[4]);
        record.name = fieldSetFlags()[5] ? this.name : (java.lang.String) defaultValue(fields()[5]);
        record.organizationId = fieldSetFlags()[6] ? this.organizationId : (java.lang.String) defaultValue(fields()[6]);
        record.qType = fieldSetFlags()[7] ? this.qType : (java.lang.String) defaultValue(fields()[7]);
        record.questionText = fieldSetFlags()[8] ? this.questionText : (java.lang.String) defaultValue(fields()[8]);
        record.updatedBy = fieldSetFlags()[9] ? this.updatedBy : (java.lang.String) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<QuestionCreateRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<QuestionCreateRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<QuestionCreateRequest>
    READER$ = (org.apache.avro.io.DatumReader<QuestionCreateRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










